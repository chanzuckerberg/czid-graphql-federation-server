schema {
  query: Query
  mutation: Mutation
}

directive @example(value: ObjMap) repeatable on FIELD_DEFINITION | OBJECT | INPUT_OBJECT | ENUM | SCALAR

directive @globalOptions(sourceName: String, endpoint: String, operationHeaders: ObjMap, queryStringOptions: ObjMap, queryParams: ObjMap) on OBJECT

directive @httpOperation(path: String, operationSpecificHeaders: ObjMap, httpMethod: HTTPMethod, isBinary: Boolean, requestBaseBody: ObjMap, queryParamArgMap: ObjMap, queryStringOptionsByParam: ObjMap) on FIELD_DEFINITION

type Query @globalOptions(sourceName: "CZIDREST", endpoint: "http://web:3001/") {
  BulkDownload(bulkDownloadId: String): GeneratedMeshSchema @httpOperation(path: "/bulk_downloads/{args.bulkDownloadId}", operationSpecificHeaders: "{\"Cookie\":\"{context.headers['cookie']}\"}", httpMethod: GET)
  PersistedBackground(projectId: String): PersistedBackground @httpOperation(path: "/persisted_backgrounds/{args.projectId}", operationSpecificHeaders: "{\"Cookie\":\"{context.headers['cookie']}\"}", httpMethod: GET)
  PipelineData(sampleId: String): PipelineData @httpOperation(path: "/samples/{args.sampleId}/pipeline_viz/7.0.json", operationSpecificHeaders: "{\"Cookie\":\"{context.headers['cookie']}\"}", httpMethod: GET)
  TaxonDist(backgroundId: String, taxonId: String): TaxonDist @httpOperation(path: "/backgrounds/{args.backgroundId}/show_taxon_dist.json?taxid={args.taxonId}", operationSpecificHeaders: "{\"Cookie\":\"{context.headers['cookie']}\"}", httpMethod: GET)
}

"Generated mesh schema from JSON object"
type GeneratedMeshSchema {
  bulk_download: query_BulkDownload_bulk_download
  download_type: query_BulkDownload_download_type
}

type query_BulkDownload_bulk_download {
  id: JSON
  params_json: JSON
  download_type: JSON
  status: JSON
  error_message: JSON
  user_id: JSON
  created_at: JSON
  updated_at: JSON
  progress: JSON
  ecs_task_arn: JSON
  output_file_size: JSON
  description: JSON
  deleted_at: JSON
  analysis_type: JSON
  analysis_count: JSON
  num_samples: JSON
  download_name: JSON
  file_size: JSON
  user_name: JSON
  execution_type: JSON
  log_url: JSON
  params: JSON
  pipeline_runs: JSON
  workflow_runs: JSON
  presigned_output_url: JSON
}

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type query_BulkDownload_download_type {
  type: JSON
  display_name: JSON
  description: JSON
  category: JSON
  execution_type: JSON
  fields: JSON
  file_type_display: JSON
  workflows: JSON
}

type PersistedBackground {
  background_id: JSON
}

type PipelineData {
  stages: [query_PipelineData_stages_items]
  edges: [query_PipelineData_edges_items]
  status: JSON
}

type query_PipelineData_stages_items {
  name: JSON
  steps: [query_PipelineData_stages_items_steps_items]
  jobStatus: JSON
}

type query_PipelineData_stages_items_steps_items {
  name: JSON
  description: JSON
  inputVariables: [query_PipelineData_stages_items_steps_items_inputVariables_items]
  outputFiles: [query_PipelineData_stages_items_steps_items_outputFiles_items]
  inputEdges: [JSON]
  outputEdges: [JSON]
  status: JSON
  startTime: JSON
  endTime: JSON
  resources: [JSON]
}

type query_PipelineData_stages_items_steps_items_inputVariables_items {
  name: JSON
  type: JSON
}

type query_PipelineData_stages_items_steps_items_outputFiles_items {
  displayName: JSON
  url: JSON
}

type query_PipelineData_edges_items {
  to: query_PipelineData_edges_items_to
  from: query_PipelineData_edges_items_from
  files: [query_PipelineData_edges_items_files_items]
  isIntraStage: JSON
}

type query_PipelineData_edges_items_to {
  stageIndex: JSON
  stepIndex: JSON
}

type query_PipelineData_edges_items_from {
  stageIndex: JSON
  stepIndex: JSON
}

type query_PipelineData_edges_items_files_items {
  displayName: JSON
  url: JSON
}

type TaxonDist {
  merged_NT_NR: query_TaxonDist_merged_NT_NR
  NR: query_TaxonDist_NR
  NT: query_TaxonDist_NT
}

type query_TaxonDist_merged_NT_NR {
  tax_level: JSON
  mean: JSON
  stdev: JSON
  rpm_list: [JSON]
}

type query_TaxonDist_NR {
  tax_level: JSON
  mean: JSON
  stdev: JSON
  rpm_list: [JSON]
}

type query_TaxonDist_NT {
  tax_level: JSON
  mean: JSON
  stdev: JSON
  rpm_list: [JSON]
}

type Mutation {
  UpdateSampleNotes(sampleId: String, input: mutationInput_UpdateSampleNotes_input_Input): JSON @httpOperation(path: "/samples/{args.sampleId}/save_metadata", operationSpecificHeaders: "{\"Cookie\":\"{context.headers['cookie']}\"}", httpMethod: POST)
}

input mutationInput_UpdateSampleNotes_input_Input @example(value: "{\"value\":\"test\",\"field\":\"notes\",\"authenticityToken\":\"test\"}") {
  value: String
  field: String
  authenticityToken: String
}

scalar ObjMap

enum HTTPMethod {
  GET
  HEAD
  POST
  PUT
  DELETE
  CONNECT
  OPTIONS
  TRACE
  PATCH
}